name: CI/CD Pipeline

on:
  push:
    branches: [ main, cpp_version ]
  pull_request:
    branches: [ main, cpp_version ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fileservice_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libjsoncpp-dev \
          uuid-dev \
          zlib1g-dev \
          openssl \
          libssl-dev \
          postgresql-server-dev-all \
          libpq-dev

    - name: Install Drogon
      run: |
        git clone https://github.com/drogonframework/drogon
        cd drogon
        git submodule update --init
        mkdir build && cd build
        cmake ..
        make -j$(nproc)
        sudo make install

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=ON ..

    - name: Build
      run: |
        cd build
        make -j$(nproc)

    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Login to GitHub Container Registry
      uses: actions/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}:latest .
        docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
        docker push ghcr.io/${{ github.repository }}:latest
        docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy using SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        # Настройка SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        echo -e "Host deploy\n\tHostName $DEPLOY_HOST\n\tUser $DEPLOY_USER\n\tIdentityFile ~/.ssh/deploy_key\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
        
        # Деплой на сервер
        ssh deploy "docker pull ghcr.io/${{ github.repository }}:${{ github.sha }} && \
                   docker stop fileservice || true && \
                   docker rm fileservice || true && \
                   docker run -d \
                     --name fileservice \
                     --restart always \
                     -p 3000:3000 \
                     -v /data/fileservice:/app/storage \
                     --env-file /etc/fileservice/.env \
                     ghcr.io/${{ github.repository }}:${{ github.sha }}"
